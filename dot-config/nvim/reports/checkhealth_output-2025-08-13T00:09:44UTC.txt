
==============================================================================
CopilotChat:                                                              1 ⚠️

CopilotChat.nvim [core] ~
- ✅ OK nvim: NVIM v0.12.0-dev-916+g68eece8b84
  Build type: RelWithDebInfo
  LuaJIT 2.1.1753364724
  Run ":verbose version" for more info
- ✅ OK setup: called
- ✅ OK temp dir: writable (/tmp/lua_G2Dc4H)

CopilotChat.nvim [commands] ~
- ✅ OK curl: curl 8.7.1 (x86_64-apple-darwin24.0) libcurl/8.7.1 (SecureTransport) LibreSSL/3.3.6 zlib/1.2.12 nghttp2/1.64.0
  Release-Date: 2024-03-27
  Protocols: dict file ftp ftps gopher gophers http https imap imaps ipfs ipns ldap ldaps mqtt pop3 pop3s rtsp smb smbs smtp smtps telnet tftp
  Features: alt-svc AsynchDNS GSS-API HSTS HTTP2 HTTPS-proxy IPv6 Kerberos Largefile libz MultiSSL NTLM SPNEGO SSL threadsafe UnixSockets
- ✅ OK git: git version 2.50.1
- ✅ OK rg: ripgrep 14.1.1

  features:+pcre2
  simd(compile):+NEON
  simd(runtime):+NEON

  PCRE2 10.43 is available (JIT is available)
- ✅ OK lynx: Lynx Version 2.9.2 (31 May 2024)
  libwww-FM 2.14, SSL-MM 1.4.1, OpenSSL 3.5.2, ncurses 6.5.20240427
  Built on darwin24.2.0 (May 31 2024 23:03:20).

  Copyrights held by the Lynx Developers Group,
  the University of Kansas, CERN, and other contributors.
  Distributed under the GNU General Public License (Version 2).
  See https://lynx.invisible-island.net/ and the online help for more information.

  See http://www.openssl.org/ for information about OpenSSL.
- ✅ OK gh: gh version 2.76.2 (2025-07-30)
  https://github.com/cli/cli/releases/tag/v2.76.2

CopilotChat.nvim [dependencies] ~
- ✅ OK plenary: installed
- ✅ OK copilot: copilot.vim
- ✅ OK vim.ui.select: overridden by `@/Users/s-a-c/.local/share/nvim/site/pack/core/opt/snacks.nvim/lua/snacks/picker/init.lua`
- ⚠️ WARNING tiktoken_core: missing, optional for accurate token counting. See README for installation instructions.
- ✅ OK treesitter[markdown]: installed
- ✅ OK treesitter[diff]: installed

==============================================================================
avante:                                                                   1 ❌

avante.nvim ~
- ✅ OK Found required plugin: nvim-lua/plenary.nvim
- ✅ OK Found required plugin: MunifTanjim/nui.nvim
- ✅ OK Found icons plugin (nvim-web-devicons or mini.icons)
- ✅ OK Using native input provider (no additional dependencies required)
- ❌ ERROR Copilot provider is configured but neither copilot.lua nor copilot.vim is installed

TreeSitter Dependencies ~
- ✅ OK All essential TreeSitter parsers are installed
- ✅ OK TreeSitter highlighter is available

==============================================================================
blade-nav:                                                          1 ⚠️  4 ❌

Blade Nav health check started ~
- ✅ OK Neovim version: 0.12.0
- ✅ OK Operating System: Darwin
- ✅ OK zsh:1: command not found: php
- ✅ OK zsh:1: command not found: php
- ❌ ERROR Cannot run artisan
- ⚠️ WARNING Blade command components-aliases cannot be checked
- ❌ ERROR Missing composer.json
- ❌ ERROR Missing resources/views directory
- ❌ ERROR Missing vendor/composer/autoload_psr4.php
- ✅ OK Git repository found

==============================================================================
blink.cmp:                                                                1 ⚠️

System ~
- ✅ OK curl is installed
- ✅ OK git is installed
- ✅ OK Your system is supported by pre-built binaries (aarch64-apple-darwin)
- ✅ OK blink_cmp_fuzzy lib is downloaded/built

Sources ~
- ⚠️ WARNING Some providers may show up as "disabled" but are enabled dynamically (i.e. cmdline)

Default sources ~
- lsp (blink.cmp.sources.lsp)
- path (blink.cmp.sources.path)
- snippets (blink.cmp.sources.snippets)
- buffer (blink.cmp.sources.buffer)

Cmdline sources ~
- buffer (blink.cmp.sources.buffer)
- cmdline (blink.cmp.sources.cmdline)

Disabled sources ~
- omni (blink.cmp.sources.complete_func)

==============================================================================
codecompanion:                                                              ✅

- Neovim version: 0.12.0
- Log file: /Users/s-a-c/.local/state/nvim/codecompanion.log

Dependencies: ~
- ✅ OK plenary.nvim installed
- ✅ OK nvim-treesitter installed

Tree-sitter parsers: ~
- ✅ OK markdown parser installed
- ✅ OK yaml parser installed

Libraries: ~
- ✅ OK curl installed
- ✅ OK base64 installed
- ✅ OK rg installed

==============================================================================
codeium:                                                                  1 ⚠️

Codeium: checking Codeium server status ~
- ✅ OK API key properly loaded
- ⚠️ WARNING Codeium: checkhealth is not set

==============================================================================
conform:                                                                  3 ⚠️

conform.nvim report ~
- Log file: /Users/s-a-c/.local/state/nvim/conform.log
- ✅ OK biome ready (json, javascriptreact, javascript, typescriptreact, jsonc, typescript)
- ✅ OK black ready (python)
- ✅ OK blade-formatter ready (blade)
- ✅ OK buf ready (proto)
- ✅ OK clang_format ready (c, cpp)
- ✅ OK dart_format ready (dart)
- ⚠️ WARNING dockerfilelint unavailable: Unknown formatter. Formatter config missing or incomplete
- ✅ OK gofmt ready (go)
- ✅ OK goimports ready (go)
- ⚠️ WARNING google_java_format unavailable: Unknown formatter. Formatter config missing or incomplete
- ✅ OK isort ready (python)
- ✅ OK ktlint ready (kotlin)
- ✅ OK mix ready (elixir)
- ✅ OK nixfmt ready (nix)
- ✅ OK ormolu ready (haskell)
- ✅ OK php_cs_fixer ready (php)
- ✅ OK pint ready (php)
- ✅ OK prettier ready (sass, json, javascriptreact, javascript, html, scss, typescriptreact, yaml, less, vue, jsonc, svelte, astro, typescript, markdown, yml, graphql, css)
- ✅ OK rubocop ready (ruby)
- ✅ OK rustfmt ready (rust)
- ✅ OK shfmt ready (sh, bash, zsh)
- ⚠️ WARNING sqlformat unavailable: Unknown formatter. Formatter config missing or incomplete
- ✅ OK stylua ready (lua)
- ✅ OK swift_format ready (swift)
- ✅ OK taplo ready (toml)
- ✅ OK terraform_fmt ready (hcl, terraform)
- ✅ OK xmlformatter ready (xml)

==============================================================================
dap:                                                                      1 ❌

dap: Adapters ~

dap.adapter: node2 ~
- ❌ ERROR `command` is not executable. Check path and permissions. Use vim.fn.expand to handle ~ or $HOME:
     node

dap: Sessions ~
- ✅ OK No active sessions

==============================================================================
laravel:                                                            1 ⚠️  1 ❌

Laravel ~

External Dependencies ~
- ✅ OK rg installed

Plugin Dependencies ~
- ✅ OK Nui is installed
- ✅ OK Promise-async is installed
- ⚠️ WARNING CMP is not installed, completion source is available for it
  - ADVICE:
    - Install it from `https://github.com/hrsh7th/nvim-cmp`

Pickers ~
- ❌ ERROR Failed to run healthcheck for "laravel" plugin. Exception:
  ...m/site/pack/core/opt/laravel.nvim/lua/laravel/health.lua:54: attempt to call upvalue 'app' (a table value)


==============================================================================
lspconfig:                                                                  ✅

- Skipped. This healthcheck is redundant with `:checkhealth vim.lsp`.

==============================================================================
mason:                                                                    3 ⚠️

mason.nvim ~
- ✅ OK mason.nvim version v2.0.1
- ✅ OK PATH: prepend
- ✅ OK Providers: 
    mason.providers.registry-api
    mason.providers.client
- ✅ OK neovim version >= 0.10.0

mason.nvim [Registries] ~
- ✅ OK Registry `github.com/mason-org/mason-registry version: 2025-08-12-right-soda` is installed.

mason.nvim [Core utils] ~
- ✅ OK unzip: `UnZip 6.00 of 20 April 2009, by Info-ZIP, with modifications by Apple Inc.`
- ✅ OK wget: `GNU Wget 1.25.0, a non-interactive network retriever.`
- ✅ OK curl: `curl 8.7.1 (x86_64-apple-darwin24.0) libcurl/8.7.1 (SecureTransport) LibreSSL/3.3.6 zlib/1.2.12 nghttp2/1.64.0`
- ✅ OK gzip: `Apple gzip 457.140.3`
- ✅ OK tar: `bsdtar 3.5.3 - libarchive 3.7.4 zlib/1.2.12 liblzma/5.4.3 bz2lib/1.0.8 `
- ✅ OK bash: `GNU bash, version 5.3.3(1)-release (aarch64-apple-darwin24.4.0)`
- ✅ OK sh: `Ok`

mason.nvim [Languages] ~
- ✅ OK Ruby: `ruby 2.6.10p210 (2022-04-12 revision 67958) [universal.arm64e-darwin24]`
- ✅ OK Go: `go version go1.24.6 darwin/arm64`
- ✅ OK RubyGem: `3.0.3.1`
- ⚠️ WARNING npm: not available
  - ADVICE:
    - spawn: npm failed with exit code 127 and signal 0. env: node: No such file or directory

- ⚠️ WARNING node: not available
  - ADVICE:
    - spawn: node failed with exit code - and signal -. Could not find executable "node" in PATH.

- ✅ OK luarocks: `/opt/homebrew/bin/luarocks 3.12.2`
- ✅ OK java: `java version "24.0.2" 2025-07-15`
- ✅ OK PHP: `PHP 8.4.11 (cli) (built: Jul 29 2025 15:30:21) (NTS)`
- ✅ OK python: `Python 3.13.5`
- ✅ OK JAVA_HOME: `java version "24.0.2" 2025-07-15`
- ✅ OK javac: `javac 24.0.2`
- ✅ OK cargo: `cargo 1.89.0 (c24e10642 2025-06-23)`
- ✅ OK Composer: `Composer version 2.8.10 2025-07-10 19:08:33`
- ⚠️ WARNING julia: not available
  - ADVICE:
    - spawn: julia failed with exit code 1 and signal 0. Error: The Julia launcher failed to figure out which juliaup channel to use.

- ✅ OK pip: `pip 25.1.1 from /opt/homebrew/lib/python3.13/site-packages/pip (python 3.13)`
- ✅ OK python venv: `Ok`

==============================================================================
mason-lspconfig:                                                            ✅

mason-lspconfig.nvim ~
- ✅ OK Neovim v0.11
- ✅ OK mason.nvim v2

==============================================================================
neorg:                                                                    1 ❌

- ❌ ERROR Failed to run healthcheck for "neorg" plugin. Exception:
  ...share/nvim/site/pack/core/opt/neorg/lua/neorg/health.lua:3: loop or previous error loading module 'neorg.core'


==============================================================================
noice:                                                                    2 ⚠️

noice.nvim ~
- ✅ OK *Neovim* >= 0.9.0
- ✅ OK You're using a GUI that should work ok
- ✅ OK *vim.go.lazyredraw* is not enabled
- ✅ OK `snacks.nvim` is installed
- ✅ OK {TreeSitter} `vim` parser is installed
- ✅ OK {TreeSitter} `regex` parser is installed
- ✅ OK {TreeSitter} `lua` parser is installed
- ✅ OK {TreeSitter} `bash` parser is installed
- ✅ OK {TreeSitter} `markdown` parser is installed
- ✅ OK {TreeSitter} `markdown_inline` parser is installed
- ✅ OK `vim.notify` is set to **Noice**
- ✅ OK `vim.lsp.buf.hover` is set to **Noice**
- ✅ OK `vim.lsp.buf.signature_help` is set to **Noice**
- ⚠️ WARNING `vim.lsp.util.convert_input_to_markdown_lines` is not configured to be handled by **Noice**
- ⚠️ WARNING `vim.lsp.util.stylize_markdown` is not configured to be handled by **Noice**

==============================================================================
nvim-treesitter:                                                          1 ⚠️

Installation ~
- ✅ OK `tree-sitter` found 0.25.8 (parser generator, only needed for :TSInstallFromGrammar)
- ⚠️ WARNING `node` executable not found (only needed for :TSInstallFromGrammar, not required for :TSInstall)
- ✅ OK `git` executable found.
- ✅ OK `cc` executable found. Selected from { vim.NIL, "cc", "gcc", "clang", "cl", "zig" }
  Version: 
- ✅ OK Neovim was compiled with tree-sitter runtime ABI version 15 (required >=13). Parsers must be compatible with runtime ABI.

OS Info:
{
  machine = "arm64",
  release = "24.6.0",
  sysname = "Darwin",
  version = "Darwin Kernel Version 24.6.0: Mon Jul 14 11:30:29 PDT 2025; root:xnu-11417.140.69~1/RELEASE_ARM64_T6000"
} ~

Parser/Features         H L F I J
  - astro               ✓ ✓ ✓ ✓ ✓
  - bash                ✓ ✓ ✓ . ✓
  - c                   ✓ ✓ ✓ ✓ ✓
  - css                 ✓ . ✓ ✓ ✓
  - diff                ✓ . ✓ . ✓
  - dockerfile          ✓ . . . ✓
  - gitignore           ✓ . . . ✓
  - go                  ✓ ✓ ✓ ✓ ✓
  - html                ✓ ✓ ✓ ✓ ✓
  - javascript          ✓ ✓ ✓ ✓ ✓
  - json                ✓ ✓ ✓ ✓ .
  - lua                 ✓ ✓ ✓ ✓ ✓
  - markdown            ✓ . ✓ ✓ ✓
  - markdown_inline     ✓ . . . ✓
  - nix                 ✓ ✓ ✓ ✓ ✓
  - norg                ✓ . ✓ . ✓
  - python              ✓ ✓ ✓ ✓ ✓
  - query               ✓ ✓ ✓ ✓ ✓
  - regex               ✓ . . . .
  - rust                ✓ ✓ ✓ ✓ ✓
  - scss                ✓ . ✓ ✓ ✓
  - svelte              ✓ ✓ ✓ ✓ ✓
  - tsx                 ✓ ✓ ✓ ✓ ✓
  - typescript          ✓ ✓ ✓ ✓ ✓
  - typst               ✓ . ✓ ✓ ✓
  - vim                 ✓ ✓ ✓ . ✓
  - vimdoc              ✓ . . . ✓
  - vue                 ✓ . ✓ ✓ ✓
  - yaml                ✓ ✓ ✓ ✓ ✓

  Legend: H[ighlight], L[ocals], F[olds], I[ndents], In[j]ections
         +) multiple parsers found, only one will be used
         x) errors found in the query, try to run :TSUpdate {lang} ~

==============================================================================
render-markdown:                                                          2 ⚠️

render-markdown.nvim [version] ~
- ✅ OK plugin 8.6.11
- ✅ OK neovim >= 0.11

render-markdown.nvim [configuration] ~
- ✅ OK valid

render-markdown.nvim [treesitter] ~
- ✅ OK markdown: parser installed
- ✅ OK markdown: highlights ~/.local/share/nvim/site/pack/core/opt/nvim-treesitter/queries/markdown/highlights.scm
- ✅ OK markdown: highlighter enabled
- ✅ OK markdown_inline: parser installed
- ✅ OK markdown_inline: highlights ~/.local/share/nvim/site/pack/core/opt/nvim-treesitter/queries/markdown_inline/highlights.scm
- ⚠️ WARNING latex: parser not installed
  - ADVICE:
    - disable latex support to avoid this warning
    - require('render-markdown').setup({ latex = { enabled = false } })
- ✅ OK html: parser installed

render-markdown.nvim [icons] ~
- ✅ OK using: nvim-web-devicons

render-markdown.nvim [executables] ~
- ⚠️ WARNING latex2text: not installed
  - ADVICE:
    - disable latex support to avoid this warning
    - require('render-markdown').setup({ latex = { enabled = false } })

render-markdown.nvim [conflicts] ~
- ✅ OK headlines: not installed
- ✅ OK markview: not installed
- ✅ OK obsidian: not installed

==============================================================================
snacks:                                                             5 ⚠️  3 ❌

Snacks ~
- ✅ OK setup called

Snacks.bigfile ~
- ✅ OK setup {enabled}

Snacks.dashboard ~
- ✅ OK setup {enabled}
- ✅ OK setup ran
- ✅ OK dashboard opened

Snacks.explorer ~
- ✅ OK setup {enabled}

Snacks.image ~
- ⚠️ WARNING setup {disabled}
- ✅ OK 'kitty' ``
- ✅ OK 'wezterm' ``
- ✅ OK 'ghostty' ``
- ✅ OK 'magick' ``
- ✅ OK 'convert' ``
- ✅ OK Terminal Dimensions:
  - {size}: `0` x `0` pixels
  - {scale}: `1.00`
  - {cell}: `0` x `0` pixels
- ✅ OK Available Treesitter languages:
    `css`, `html`, `javascript`, `markdown_inline`, `markdown`, `norg`, `scss`, `svelte`, `tsx`, `typst`, `vue`
- ⚠️ WARNING Missing Treesitter languages:
    `latex`
- ⚠️ WARNING Image rendering in docs with missing treesitter parsers won't work
- ✅ OK 'gs' ``
- ✅ OK PDF files are supported
- ✅ OK 'tectonic' ``
- ✅ OK 'pdflatex' ``
- ⚠️ WARNING The `latex` treesitter parser is required to render LaTeX math expressions
- ❌ ERROR Tool not found: 'mmdc'
- ⚠️ WARNING `mmdc` is required to render Mermaid diagrams
- ❌ ERROR your terminal does not support the kitty graphics protocol
- supported terminals: `kitty`, `wezterm`, `ghostty`

Snacks.input ~
- ✅ OK setup {enabled}
- ✅ OK `vim.ui.input` is set to `Snacks.input`

Snacks.lazygit ~
- ✅ OK {lazygit} installed

Snacks.notifier ~
- ✅ OK setup {enabled}
- ✅ OK is ready

Snacks.picker ~
- ✅ OK setup {enabled}
- ✅ OK `vim.ui.select` is set to `Snacks.picker.select`
- ✅ OK Available Treesitter languages:
    `regex`
- ✅ OK 'git' ``
- ✅ OK 'rg' ``
- ✅ OK `Snacks.picker.grep()` is available
- ❌ ERROR Failed to run healthcheck for "snacks" plugin. Exception:
  ...vim/site/pack/core/opt/snacks.nvim/lua/snacks/health.lua:96: attempt to compare nil with table


==============================================================================
telescope:                                                                  ✅

Checking for required plugins ~
- ✅ OK plenary installed.
- ✅ OK nvim-treesitter installed.

Checking external dependencies ~
- ✅ OK rg: found ripgrep 14.1.1
- ✅ OK fd: found fd 10.2.0

===== Installed extensions ===== ~

Telescope Extension: `cheatsheet` ~
- No healthcheck provided

Telescope Extension: `color_names` ~
- No healthcheck provided

Telescope Extension: `conventional_commits` ~
- ✅ OK git is installed
- ✅ OK fugitive.vim is loaded

Telescope Extension: `dap` ~
- No healthcheck provided

Telescope Extension: `foldmarkers` ~
- No healthcheck provided

Telescope Extension: `fzf_writer` ~
- No healthcheck provided

Telescope Extension: `gh` ~
- No healthcheck provided

Telescope Extension: `jj` ~
- ✅ OK jj installed
- ✅ OK jj version 0.32.0 is supported

Telescope Extension: `media_files` ~
- No healthcheck provided

Telescope Extension: `menu` ~
- No healthcheck provided

Telescope Extension: `undo` ~
- No healthcheck provided

Telescope Extension: `zoxide` ~
- No healthcheck provided

==============================================================================
vim.deprecated:                                                           2 ⚠️

 ~
- ⚠️ WARNING vim.tbl_flatten is deprecated. Feature will be removed in Nvim 0.13
  - ADVICE:
    - use vim.iter(…):flatten():totable() instead.
    - stack traceback:
        /Users/s-a-c/.local/share/nvim/site/pack/core/opt/neotest-jest/lua/neotest-jest/util.lua:163
        /Users/s-a-c/.local/share/nvim/site/pack/core/opt/neotest-jest/lua/neotest-jest/jest-util.lua:44
        [C]:-1
        /Users/s-a-c/.local/share/nvim/site/pack/core/opt/neotest-jest/lua/neotest-jest/init.lua:7
        [C]:-1
        /Users/s-a-c/.config/nvim/lua/plugins/editor/neotest.lua:103
        [C]:-1
        /Users/s-a-c/.config/nvim/lua/plugins/init.lua:266
        vim/_editor.lua:0
        vim/_editor.lua:0

 ~
- ⚠️ WARNING vim.validate{<table>} is deprecated. Feature will be removed in Nvim 1.0
  - ADVICE:
    - use vim.validate(<params>) instead.
    - stack traceback:
        /Users/s-a-c/.local/share/nvim/site/pack/core/opt/codecompanion.nvim/lua/codecompanion/utils/log.lua:183
        /Users/s-a-c/.local/share/nvim/site/pack/core/opt/codecompanion.nvim/lua/codecompanion/utils/log.lua:277
        [C]:-1
        /Users/s-a-c/.local/share/nvim/site/pack/core/opt/codecompanion.nvim/lua/codecompanion/utils/ui.lua:1
        [C]:-1
        /Users/s-a-c/.local/share/nvim/site/pack/core/opt/codecompanion.nvim/lua/codecompanion/config.lua:2
        [C]:-1
        /Users/s-a-c/.local/share/nvim/site/pack/core/opt/codecompanion.nvim/plugin/codecompanion.lua:10
        [C]:-1
        /opt/homebrew/Caskroom/neovim-nightly/latest/nvim-macos-arm64/share/nvim/runtime/lua/vim/pack.lua:617
        [C]:-1
        /opt/homebrew/Caskroom/neovim-nightly/latest/nvim-macos-arm64/share/nvim/runtime/lua/vim/pack.lua:682
        /Users/s-a-c/.config/nvim/lua/plugins/init.lua:35
        /Users/s-a-c/.config/nvim/lua/plugins/init.lua:366
        /Users/s-a-c/.config/nvim/lua/config/init.lua:23
        /Users/s-a-c/dotfiles/dot-config/nvim/init.lua:8
    - stack traceback:
        /Users/s-a-c/.local/share/nvim/site/pack/core/opt/codecompanion.nvim/lua/codecompanion/utils/log.lua:155
        /Users/s-a-c/.local/share/nvim/site/pack/core/opt/codecompanion.nvim/lua/codecompanion/utils/log.lua:189
        /Users/s-a-c/.local/share/nvim/site/pack/core/opt/codecompanion.nvim/lua/codecompanion/utils/log.lua:277
        [C]:-1
        /Users/s-a-c/.local/share/nvim/site/pack/core/opt/codecompanion.nvim/lua/codecompanion/utils/ui.lua:1
        [C]:-1
        /Users/s-a-c/.local/share/nvim/site/pack/core/opt/codecompanion.nvim/lua/codecompanion/config.lua:2
        [C]:-1
        /Users/s-a-c/.local/share/nvim/site/pack/core/opt/codecompanion.nvim/plugin/codecompanion.lua:10
        [C]:-1
        /opt/homebrew/Caskroom/neovim-nightly/latest/nvim-macos-arm64/share/nvim/runtime/lua/vim/pack.lua:617
        [C]:-1
        /opt/homebrew/Caskroom/neovim-nightly/latest/nvim-macos-arm64/share/nvim/runtime/lua/vim/pack.lua:682
        /Users/s-a-c/.config/nvim/lua/plugins/init.lua:35
        /Users/s-a-c/.config/nvim/lua/plugins/init.lua:366
        /Users/s-a-c/.config/nvim/lua/config/init.lua:23
        /Users/s-a-c/dotfiles/dot-config/nvim/init.lua:8
    - stack traceback:
        /Users/s-a-c/.local/share/nvim/site/pack/core/opt/codecompanion.nvim/lua/codecompanion/utils/log.lua:14
        /Users/s-a-c/.local/share/nvim/site/pack/core/opt/codecompanion.nvim/lua/codecompanion/utils/log.lua:189
        /Users/s-a-c/.local/share/nvim/site/pack/core/opt/codecompanion.nvim/lua/codecompanion/utils/log.lua:277
        [C]:-1
        /Users/s-a-c/.local/share/nvim/site/pack/core/opt/codecompanion.nvim/lua/codecompanion/utils/ui.lua:1
        [C]:-1
        /Users/s-a-c/.local/share/nvim/site/pack/core/opt/codecompanion.nvim/lua/codecompanion/config.lua:2
        [C]:-1
        /Users/s-a-c/.local/share/nvim/site/pack/core/opt/codecompanion.nvim/plugin/codecompanion.lua:10
        [C]:-1
        /opt/homebrew/Caskroom/neovim-nightly/latest/nvim-macos-arm64/share/nvim/runtime/lua/vim/pack.lua:617
        [C]:-1
        /opt/homebrew/Caskroom/neovim-nightly/latest/nvim-macos-arm64/share/nvim/runtime/lua/vim/pack.lua:682
        /Users/s-a-c/.config/nvim/lua/plugins/init.lua:35
        /Users/s-a-c/.config/nvim/lua/plugins/init.lua:366
        /Users/s-a-c/.config/nvim/lua/config/init.lua:23
        /Users/s-a-c/dotfiles/dot-config/nvim/init.lua:8

==============================================================================
vim.health:                                                                 ✅

Configuration ~
- ✅ OK no issues found

Runtime ~
- ✅ OK $VIMRUNTIME: /opt/homebrew/Caskroom/neovim-nightly/latest/nvim-macos-arm64/share/nvim/runtime

Performance ~
- ✅ OK Build type: RelWithDebInfo

Remote Plugins ~
- ✅ OK Up to date

terminal ~
- key_backspace (kbs) terminfo entry: `key_backspace=^H`
- key_dc (kdch1) terminfo entry: `key_dc=\E[3~`

External Tools ~
- ✅ OK ripgrep 14.1.1 (/opt/homebrew/bin/rg)
- ✅ OK git version 2.50.1 (/opt/homebrew/bin/git)
- ✅ OK curl 8.7.1 (/usr/bin/curl)
  Release-Date: 2024-03-27
  Protocols: dict file ftp ftps gopher gophers http https imap imaps ipfs ipns ldap ldaps mqtt pop3 pop3s rtsp smb smbs smtp smtps telnet tftp
  Features: alt-svc AsynchDNS GSS-API HSTS HTTP2 HTTPS-proxy IPv6 Kerberos Largefile libz MultiSSL NTLM SPNEGO SSL threadsafe UnixSockets

==============================================================================
vim.lsp:                                                                    ✅

- LSP log level : WARN
- Log path: /Users/s-a-c/.local/state/nvim/lsp.log
- Log size: 49 KB

vim.lsp: Active Features ~
- Semantic Tokens
  - Active buffers:

- Folding Range
  - Active buffers:


vim.lsp: Active Clients ~
- No active clients

vim.lsp: Enabled Configurations ~
- biome:
  - capabilities: {
      textDocument = {
        completion = {
          completionItem = {
            commitCharactersSupport = false,
            deprecatedSupport = true,
            documentationFormat = { "markdown", "plaintext" },
            insertReplaceSupport = true,
            insertTextModeSupport = {
              valueSet = { 1 }
            },
            labelDetailsSupport = true,
            preselectSupport = false,
            resolveSupport = {
              properties = { "documentation", "detail", "additionalTextEdits", "command", "data" }
            },
            snippetSupport = true,
            tagSupport = {
              valueSet = { 1 }
            }
          },
          completionList = {
            itemDefaults = { "commitCharacters", "editRange", "insertTextFormat", "insertTextMode", "data" }
          },
          contextSupport = true,
          insertTextMode = 1
        }
      }
    }
  - cmd: <function @/Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-lspconfig/lsp/biome.lua:13>
  - filetypes: astro, css, graphql, html, javascript, javascriptreact, json, jsonc, svelte, typescript, typescript.tsx, typescriptreact, vue
  - root_dir: <function @/Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-lspconfig/lsp/biome.lua:37>
  - workspace_required: true

- buf_ls:
  - capabilities: {
      textDocument = {
        completion = {
          completionItem = {
            commitCharactersSupport = false,
            deprecatedSupport = true,
            documentationFormat = { "markdown", "plaintext" },
            insertReplaceSupport = true,
            insertTextModeSupport = {
              valueSet = { 1 }
            },
            labelDetailsSupport = true,
            preselectSupport = false,
            resolveSupport = {
              properties = { "documentation", "detail", "additionalTextEdits", "command", "data" }
            },
            snippetSupport = true,
            tagSupport = {
              valueSet = { 1 }
            }
          },
          completionList = {
            itemDefaults = { "commitCharacters", "editRange", "insertTextFormat", "insertTextMode", "data" }
          },
          contextSupport = true,
          insertTextMode = 1
        }
      }
    }
  - cmd: { "buf", "beta", "lsp", "--timeout=0", "--log-format=text" }
  - filetypes: proto
  - root_markers: { "buf.yaml", ".git" }

- emmet_ls:
  - capabilities: {
      textDocument = {
        completion = {
          completionItem = {
            commitCharactersSupport = false,
            deprecatedSupport = true,
            documentationFormat = { "markdown", "plaintext" },
            insertReplaceSupport = true,
            insertTextModeSupport = {
              valueSet = { 1 }
            },
            labelDetailsSupport = true,
            preselectSupport = false,
            resolveSupport = {
              properties = { "documentation", "detail", "additionalTextEdits", "command", "data" }
            },
            snippetSupport = true,
            tagSupport = {
              valueSet = { 1 }
            }
          },
          completionList = {
            itemDefaults = { "commitCharacters", "editRange", "insertTextFormat", "insertTextMode", "data" }
          },
          contextSupport = true,
          insertTextMode = 1
        }
      }
    }
  - cmd: { "emmet-ls", "--stdio" }
  - filetypes: astro, css, eruby, html, htmlangular, htmldjango, javascriptreact, less, pug, sass, scss, svelte, templ, typescriptreact, vue
  - root_markers: { ".git" }

- gopls:
  - capabilities: {
      textDocument = {
        completion = {
          completionItem = {
            commitCharactersSupport = false,
            deprecatedSupport = true,
            documentationFormat = { "markdown", "plaintext" },
            insertReplaceSupport = true,
            insertTextModeSupport = {
              valueSet = { 1 }
            },
            labelDetailsSupport = true,
            preselectSupport = false,
            resolveSupport = {
              properties = { "documentation", "detail", "additionalTextEdits", "command", "data" }
            },
            snippetSupport = true,
            tagSupport = {
              valueSet = { 1 }
            }
          },
          completionList = {
            itemDefaults = { "commitCharacters", "editRange", "insertTextFormat", "insertTextMode", "data" }
          },
          contextSupport = true,
          insertTextMode = 1
        }
      }
    }
  - cmd: { "gopls" }
  - filetypes: go, gomod, gowork, gotmpl
  - root_dir: <function @/Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-lspconfig/lsp/gopls.lua:91>

- jsonls:
  - capabilities: {
      textDocument = {
        completion = {
          completionItem = {
            commitCharactersSupport = false,
            deprecatedSupport = true,
            documentationFormat = { "markdown", "plaintext" },
            insertReplaceSupport = true,
            insertTextModeSupport = {
              valueSet = { 1 }
            },
            labelDetailsSupport = true,
            preselectSupport = false,
            resolveSupport = {
              properties = { "documentation", "detail", "additionalTextEdits", "command", "data" }
            },
            snippetSupport = true,
            tagSupport = {
              valueSet = { 1 }
            }
          },
          completionList = {
            itemDefaults = { "commitCharacters", "editRange", "insertTextFormat", "insertTextMode", "data" }
          },
          contextSupport = true,
          insertTextMode = 1
        }
      }
    }
  - cmd: { "vscode-json-language-server", "--stdio" }
  - filetypes: json, jsonc
  - init_options: {
      provideFormatter = true
    }
  - root_markers: { ".git" }

- lua_ls:
  - capabilities: {
      textDocument = {
        completion = {
          completionItem = {
            commitCharactersSupport = false,
            deprecatedSupport = true,
            documentationFormat = { "markdown", "plaintext" },
            insertReplaceSupport = true,
            insertTextModeSupport = {
              valueSet = { 1 }
            },
            labelDetailsSupport = true,
            preselectSupport = false,
            resolveSupport = {
              properties = { "documentation", "detail", "additionalTextEdits", "command", "data" }
            },
            snippetSupport = true,
            tagSupport = {
              valueSet = { 1 }
            }
          },
          completionList = {
            itemDefaults = { "commitCharacters", "editRange", "insertTextFormat", "insertTextMode", "data" }
          },
          contextSupport = true,
          insertTextMode = 1
        }
      }
    }
  - cmd: { "lua-language-server" }
  - filetypes: lua
  - root_markers: { ".luarc.json", ".luarc.jsonc", ".luacheckrc", ".stylua.toml", "stylua.toml", "selene.toml", "selene.yml", ".git" }

- phpactor:
  - capabilities: {
      textDocument = {
        completion = {
          completionItem = {
            commitCharactersSupport = false,
            deprecatedSupport = true,
            documentationFormat = { "markdown", "plaintext" },
            insertReplaceSupport = true,
            insertTextModeSupport = {
              valueSet = { 1 }
            },
            labelDetailsSupport = true,
            preselectSupport = false,
            resolveSupport = {
              properties = { "documentation", "detail", "additionalTextEdits", "command", "data" }
            },
            snippetSupport = true,
            tagSupport = {
              valueSet = { 1 }
            }
          },
          completionList = {
            itemDefaults = { "commitCharacters", "editRange", "insertTextFormat", "insertTextMode", "data" }
          },
          contextSupport = true,
          insertTextMode = 1
        }
      }
    }
  - cmd: { "phpactor", "language-server" }
  - filetypes: php
  - root_markers: { ".git", "composer.json", ".phpactor.json", ".phpactor.yml" }
  - workspace_required: true

- pyright:
  - capabilities: {
      textDocument = {
        completion = {
          completionItem = {
            commitCharactersSupport = false,
            deprecatedSupport = true,
            documentationFormat = { "markdown", "plaintext" },
            insertReplaceSupport = true,
            insertTextModeSupport = {
              valueSet = { 1 }
            },
            labelDetailsSupport = true,
            preselectSupport = false,
            resolveSupport = {
              properties = { "documentation", "detail", "additionalTextEdits", "command", "data" }
            },
            snippetSupport = true,
            tagSupport = {
              valueSet = { 1 }
            }
          },
          completionList = {
            itemDefaults = { "commitCharacters", "editRange", "insertTextFormat", "insertTextMode", "data" }
          },
          contextSupport = true,
          insertTextMode = 1
        }
      }
    }
  - cmd: { "pyright-langserver", "--stdio" }
  - filetypes: python
  - on_attach: <function @/Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-lspconfig/lsp/pyright.lua:43>
  - root_markers: { "pyproject.toml", "setup.py", "setup.cfg", "requirements.txt", "Pipfile", "pyrightconfig.json", ".git" }
  - settings: {
      python = {
        analysis = {
          autoSearchPaths = true,
          diagnosticMode = "openFilesOnly",
          useLibraryCodeForTypes = true
        }
      }
    }

- rust_analyzer:
  - before_init: <function @/Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-lspconfig/lsp/rust_analyzer.lua:108>
  - capabilities: {
      experimental = {
        serverStatusNotification = true
      },
      textDocument = {
        completion = {
          completionItem = {
            commitCharactersSupport = false,
            deprecatedSupport = true,
            documentationFormat = { "markdown", "plaintext" },
            insertReplaceSupport = true,
            insertTextModeSupport = {
              valueSet = { 1 }
            },
            labelDetailsSupport = true,
            preselectSupport = false,
            resolveSupport = {
              properties = { "documentation", "detail", "additionalTextEdits", "command", "data" }
            },
            snippetSupport = true,
            tagSupport = {
              valueSet = { 1 }
            }
          },
          completionList = {
            itemDefaults = { "commitCharacters", "editRange", "insertTextFormat", "insertTextMode", "data" }
          },
          contextSupport = true,
          insertTextMode = 1
        }
      }
    }
  - cmd: { "rust-analyzer" }
  - filetypes: rust
  - on_attach: <function @/Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-lspconfig/lsp/rust_analyzer.lua:114>
  - root_dir: <function @/Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-lspconfig/lsp/rust_analyzer.lua:57>

- tailwindcss:
  - before_init: <function @/Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-lspconfig/lsp/tailwindcss.lua:97>
  - capabilities: {
      textDocument = {
        completion = {
          completionItem = {
            commitCharactersSupport = false,
            deprecatedSupport = true,
            documentationFormat = { "markdown", "plaintext" },
            insertReplaceSupport = true,
            insertTextModeSupport = {
              valueSet = { 1 }
            },
            labelDetailsSupport = true,
            preselectSupport = false,
            resolveSupport = {
              properties = { "documentation", "detail", "additionalTextEdits", "command", "data" }
            },
            snippetSupport = true,
            tagSupport = {
              valueSet = { 1 }
            }
          },
          completionList = {
            itemDefaults = { "commitCharacters", "editRange", "insertTextFormat", "insertTextMode", "data" }
          },
          contextSupport = true,
          insertTextMode = 1
        }
      }
    }
  - cmd: { "tailwindcss-language-server", "--stdio" }
  - filetypes: aspnetcorerazor, astro, astro-markdown, blade, clojure, django-html, htmldjango, edge, eelixir, elixir, ejs, erb, eruby, gohtml, gohtmltmpl, haml, handlebars, hbs, html, htmlangular, html-eex, heex, jade, leaf, liquid, markdown, mdx, mustache, njk, nunjucks, php, razor, slim, twig, css, less, postcss, sass, scss, stylus, sugarss, javascript, javascriptreact, reason, rescript, typescript, typescriptreact, vue, svelte, templ
  - root_dir: <function @/Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-lspconfig/lsp/tailwindcss.lua:109>
  - settings: {
      tailwindCSS = {
        classAttributes = { "class", "className", "class:list", "classList", "ngClass" },
        includeLanguages = {
          eelixir = "html-eex",
          elixir = "phoenix-heex",
          eruby = "erb",
          heex = "phoenix-heex",
          htmlangular = "html",
          templ = "html"
        },
        lint = {
          cssConflict = "warning",
          invalidApply = "error",
          invalidConfigPath = "error",
          invalidScreen = "error",
          invalidTailwindDirective = "error",
          invalidVariant = "error",
          recommendedVariantOrder = "warning"
        },
        validate = true
      }
    }
  - workspace_required: true

- taplo:
  - capabilities: {
      textDocument = {
        completion = {
          completionItem = {
            commitCharactersSupport = false,
            deprecatedSupport = true,
            documentationFormat = { "markdown", "plaintext" },
            insertReplaceSupport = true,
            insertTextModeSupport = {
              valueSet = { 1 }
            },
            labelDetailsSupport = true,
            preselectSupport = false,
            resolveSupport = {
              properties = { "documentation", "detail", "additionalTextEdits", "command", "data" }
            },
            snippetSupport = true,
            tagSupport = {
              valueSet = { 1 }
            }
          },
          completionList = {
            itemDefaults = { "commitCharacters", "editRange", "insertTextFormat", "insertTextMode", "data" }
          },
          contextSupport = true,
          insertTextMode = 1
        }
      }
    }
  - cmd: { "taplo", "lsp", "stdio" }
  - filetypes: toml
  - root_markers: { ".taplo.toml", "taplo.toml", ".git" }

- tinymist:
  - capabilities: {
      textDocument = {
        completion = {
          completionItem = {
            commitCharactersSupport = false,
            deprecatedSupport = true,
            documentationFormat = { "markdown", "plaintext" },
            insertReplaceSupport = true,
            insertTextModeSupport = {
              valueSet = { 1 }
            },
            labelDetailsSupport = true,
            preselectSupport = false,
            resolveSupport = {
              properties = { "documentation", "detail", "additionalTextEdits", "command", "data" }
            },
            snippetSupport = true,
            tagSupport = {
              valueSet = { 1 }
            }
          },
          completionList = {
            itemDefaults = { "commitCharacters", "editRange", "insertTextFormat", "insertTextMode", "data" }
          },
          contextSupport = true,
          insertTextMode = 1
        }
      }
    }
  - cmd: { "tinymist" }
  - filetypes: typst
  - on_attach: <function @/Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-lspconfig/lsp/tinymist.lua:56>
  - root_markers: { ".git" }

- yamlls:
  - capabilities: {
      textDocument = {
        completion = {
          completionItem = {
            commitCharactersSupport = false,
            deprecatedSupport = true,
            documentationFormat = { "markdown", "plaintext" },
            insertReplaceSupport = true,
            insertTextModeSupport = {
              valueSet = { 1 }
            },
            labelDetailsSupport = true,
            preselectSupport = false,
            resolveSupport = {
              properties = { "documentation", "detail", "additionalTextEdits", "command", "data" }
            },
            snippetSupport = true,
            tagSupport = {
              valueSet = { 1 }
            }
          },
          completionList = {
            itemDefaults = { "commitCharacters", "editRange", "insertTextFormat", "insertTextMode", "data" }
          },
          contextSupport = true,
          insertTextMode = 1
        }
      }
    }
  - cmd: { "yaml-language-server", "--stdio" }
  - filetypes: yaml, yaml.docker-compose, yaml.gitlab, yaml.helm-values
  - root_markers: { ".git" }
  - settings: {
      redhat = {
        telemetry = {
          enabled = false
        }
      }
    }


vim.lsp: File Watcher ~
- file watching "(workspace/didChangeWatchedFiles)" disabled on all clients

vim.lsp: Position Encodings ~
- No active clients

==============================================================================
vim.provider:                                                             3 ⚠️

Clipboard (optional) ~
- ✅ OK Clipboard tool found: pbcopy

Node.js provider (optional) ~
- ⚠️ WARNING `node` and `npm` (or `yarn`, `pnpm`) must be in $PATH.
  - ADVICE:
    - Install Node.js and verify that `node` and `npm` (or `yarn`, `pnpm`) commands work.

Perl provider (optional) ~
- ⚠️ WARNING "Neovim::Ext" cpan module is not installed
  - ADVICE:
    - See :help |provider-perl| for more information.
    - You can disable this provider (and warning) by adding `let g:loaded_perl_provider = 0` to your init.vim
- ⚠️ WARNING No usable perl executable found

Python 3 provider (optional) ~
- `g:python3_host_prog` is not set. Searching for python3.11 in the environment.
- Executable: /usr/local/bin/python3.11
- Python version: 3.11.6
- pynvim version: 0.5.2
- ✅ OK Latest pynvim is installed.

Python virtualenv ~
- ✅ OK no $VIRTUAL_ENV

Ruby provider (optional) ~
- Ruby: 2.6.10
- Host: /Users/s-a-c/.local/share/gem/ruby/3.3.0/bin/neovim-ruby-host
- ✅ OK Latest "neovim" gem is installed: 0.10.0


==============================================================================
vim.treesitter:                                                             ✅

Treesitter features ~
- Treesitter ABI support: min 13, max 15
- WASM parser support: false

Treesitter parsers ~
- ✅ OK Parser: astro                ABI: 14, path: /Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-treesitter/parser/astro.so
- ✅ OK Parser: bash                 ABI: 14, path: /Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-treesitter/parser/bash.so
- ✅ OK Parser: c                    ABI: 14, path: /Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-treesitter/parser/c.so
- ✅ OK Parser: c                    ABI: 14, path: /opt/homebrew/Caskroom/neovim-nightly/latest/nvim-macos-arm64/lib/nvim/parser/c.so
- ✅ OK Parser: css                  ABI: 14, path: /Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-treesitter/parser/css.so
- ✅ OK Parser: diff                 ABI: 14, path: /Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-treesitter/parser/diff.so
- ✅ OK Parser: dockerfile           ABI: 14, path: /Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-treesitter/parser/dockerfile.so
- ✅ OK Parser: gitignore            ABI: 13, path: /Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-treesitter/parser/gitignore.so
- ✅ OK Parser: go                   ABI: 14, path: /Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-treesitter/parser/go.so
- ✅ OK Parser: html                 ABI: 14, path: /Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-treesitter/parser/html.so
- ✅ OK Parser: javascript           ABI: 14, path: /Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-treesitter/parser/javascript.so
- ✅ OK Parser: json                 ABI: 14, path: /Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-treesitter/parser/json.so
- ✅ OK Parser: lua                  ABI: 14, path: /Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-treesitter/parser/lua.so
- ✅ OK Parser: lua                  ABI: 14, path: /opt/homebrew/Caskroom/neovim-nightly/latest/nvim-macos-arm64/lib/nvim/parser/lua.so
- ✅ OK Parser: markdown             ABI: 14, path: /Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-treesitter/parser/markdown.so
- ✅ OK Parser: markdown             ABI: 14, path: /opt/homebrew/Caskroom/neovim-nightly/latest/nvim-macos-arm64/lib/nvim/parser/markdown.so
- ✅ OK Parser: markdown_inline      ABI: 14, path: /Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-treesitter/parser/markdown_inline.so
- ✅ OK Parser: markdown_inline      ABI: 14, path: /opt/homebrew/Caskroom/neovim-nightly/latest/nvim-macos-arm64/lib/nvim/parser/markdown_inline.so
- ✅ OK Parser: nix                  ABI: 13, path: /Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-treesitter/parser/nix.so
- ✅ OK Parser: norg                 ABI: 14, path: /Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-treesitter/parser/norg.so
- ✅ OK Parser: python               ABI: 14, path: /Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-treesitter/parser/python.so
- ✅ OK Parser: query                ABI: 14, path: /Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-treesitter/parser/query.so
- ✅ OK Parser: query                ABI: 14, path: /opt/homebrew/Caskroom/neovim-nightly/latest/nvim-macos-arm64/lib/nvim/parser/query.so
- ✅ OK Parser: regex                ABI: 14, path: /Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-treesitter/parser/regex.so
- ✅ OK Parser: rust                 ABI: 14, path: /Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-treesitter/parser/rust.so
- ✅ OK Parser: scss                 ABI: 13, path: /Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-treesitter/parser/scss.so
- ✅ OK Parser: svelte               ABI: 14, path: /Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-treesitter/parser/svelte.so
- ✅ OK Parser: tsx                  ABI: 14, path: /Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-treesitter/parser/tsx.so
- ✅ OK Parser: typescript           ABI: 14, path: /Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-treesitter/parser/typescript.so
- ✅ OK Parser: typst                ABI: 14, path: /Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-treesitter/parser/typst.so
- ✅ OK Parser: vim                  ABI: 14, path: /Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-treesitter/parser/vim.so
- ✅ OK Parser: vim                  ABI: 14, path: /opt/homebrew/Caskroom/neovim-nightly/latest/nvim-macos-arm64/lib/nvim/parser/vim.so
- ✅ OK Parser: vimdoc               ABI: 14, path: /Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-treesitter/parser/vimdoc.so
- ✅ OK Parser: vimdoc               ABI: 14, path: /opt/homebrew/Caskroom/neovim-nightly/latest/nvim-macos-arm64/lib/nvim/parser/vimdoc.so
- ✅ OK Parser: vue                  ABI: 14, path: /Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-treesitter/parser/vue.so
- ✅ OK Parser: yaml                 ABI: 14, path: /Users/s-a-c/.local/share/nvim/site/pack/core/opt/nvim-treesitter/parser/yaml.so

==============================================================================
which-key:                                                               41 ⚠️

- ✅ OK Most of these checks are for informational purposes only.
  WARNINGS should be treated as a warning, and don't necessarily indicate a problem with your config.
  Please |DON'T| report these warnings as an issue.

Checking your config ~
- ✅ OK |mini.icons| is installed
- ✅ OK |nvim-web-devicons| is installed

Checking for issues with your mappings ~
- ✅ OK No issues reported

checking for overlapping keymaps ~
- ⚠️ WARNING In mode `n`, <g> overlaps with <gy>, <gx>, <g]>, <gO>, <gb>, <gbc>, <gd>, <gD>, <gc>, <gcO>, <gco>, <gcA>, <gcc>, <gI>, <g[>, <gr>, <grt>, <grn>, <gra>, <gri>, <grr>:
  - <g>: Dashboard action
  - <gy>: Goto T[y]pe Definition
  - <gx>: Opens filepath or URI under cursor with the system handler (file explorer, web browser, …)
  - <g]>: Move to right "around"
  - <gO>: vim.lsp.buf.document_symbol()
  - <gb>: Comment toggle blockwise
  - <gbc>: Comment toggle current block
  - <gd>: Goto Definition
  - <gD>: Goto Declaration
  - <gc>: Comment toggle linewise
  - <gcO>: Comment insert above
  - <gco>: Comment insert below
  - <gcA>: Comment insert end of line
  - <gcc>: Comment toggle current line
  - <gI>: Goto Implementation
  - <g[>: Move to left "around"
  - <gr>: References
  - <grt>: vim.lsp.buf.type_definition()
  - <grn>: vim.lsp.buf.rename()
  - <gra>: vim.lsp.buf.code_action()
  - <gri>: vim.lsp.buf.implementation()
  - <grr>: vim.lsp.buf.references()
- ⚠️ WARNING In mode `n`, <s> overlaps with <sf>, <sfl>, <sfn>, <sF>, <sFl>, <sFn>, <sh>, <shl>, <shn>, <sn>, <sd>, <sdl>, <sdn>, <sa>, <sr>, <srl>, <srn>:
  - <s>: ⚡ Flash
  - <sf>: Find right surrounding
  - <sfl>: Find previous right surrounding
  - <sfn>: Find next right surrounding
  - <sF>: Find left surrounding
  - <sFl>: Find previous left surrounding
  - <sFn>: Find next left surrounding
  - <sh>: Highlight surrounding
  - <shl>: Highlight previous surrounding
  - <shn>: Highlight next surrounding
  - <sn>: Update `MiniSurround.config.n_lines`
  - <sd>: Delete surrounding
  - <sdl>: Delete previous surrounding
  - <sdn>: Delete next surrounding
  - <sa>: Add surrounding
  - <sr>: Replace surrounding
  - <srl>: Replace previous surrounding
  - <srn>: Replace next surrounding
- ⚠️ WARNING In mode `n`, <<Space>q> overlaps with <<Space>ql>, <<Space>qd>, <<Space>qs>, <<Space>qr>:
  - <<Space>q>: Quit
  - <<Space>ql>: Restore Last Session
  - <<Space>qd>: Don't Save Current Session
  - <<Space>qs>: Save Session
  - <<Space>qr>: Restore Session
- ⚠️ WARNING In mode `n`, <<Space>s> overlaps with <<Space>sj>, <<Space>s/>, <<Space>se>, <<Space>sq>, <<Space>sD>, <<Space>sR>, <<Space>sS>, <<Space>sw>, <<Space>sa>, <<Space>sd>, <<Space>sh>, <<Space>sn>, <<Space>sl>, <<Space>sM>, <<Space>s">, <<Space>sm>, <<Space>sp>, <<Space>sC>, <<Space>sc>, <<Space>sH>, <<Space>sg>, <<Space>sk>, <<Space>sB>, <<Space>sb>, <<Space>ss>, <<Space>su>, <<Space>si>, <<Space>sr>:
  - <<Space>s>: 󰆍 Search
  - <<Space>sj>: Jumps
  - <<Space>s/>: Search History
  - <<Space>se>: Noice Errors
  - <<Space>sq>: Quickfix List
  - <<Space>sD>: Buffer Diagnostics
  - <<Space>sR>: Resume
  - <<Space>sS>: LSP Workspace Symbols
  - <<Space>sw>: Search Word
  - <<Space>sa>: Add surrounding
  - <<Space>sd>: Delete surrounding
  - <<Space>sh>: Help Pages
  - <<Space>sn>: 🍿 Snacks
  - <<Space>sl>: Noice Last Message
  - <<Space>sM>: Man Pages
  - <<Space>s">: Registers
  - <<Space>sm>: Marks
  - <<Space>sp>: Search in File
  - <<Space>sC>: Commands
  - <<Space>sc>: Command History
  - <<Space>sH>: Highlights
  - <<Space>sg>: Grep
  - <<Space>sk>: Keymaps
  - <<Space>sB>: Grep Open Buffers
  - <<Space>sb>: Buffer Lines
  - <<Space>ss>: 󰛔 Toggle Spectre
  - <<Space>su>: Undo History
  - <<Space>si>: Icons
  - <<Space>sr>: Replace surrounding
- ⚠️ WARNING In mode `n`, <<Space>j> overlaps with <<Space>jl>, <<Space>js>, <<Space>jw>:
  - <<Space>j>: ⚡ Flash Jump
  - <<Space>jl>: Mini jump to line start
  - <<Space>js>: Mini jump to character
  - <<Space>jw>: Mini jump to word start
- ⚠️ WARNING In mode `n`, <<Space>u> overlaps with <<Space>uS>, <<Space>uC>, <<Space>uh>, <<Space>us>, <<Space>un>, <<Space>ui>, <<Space>uT>, <<Space>uf>:
  - <<Space>u>: 󰕌 UI/Undo
  - <<Space>uS>: Toggle Smear Cursor
  - <<Space>uC>: Colorschemes
  - <<Space>uh>: Hide undotree
  - <<Space>us>: 󰉶 Toggle scope guides
  - <<Space>un>: Dismiss All Notifications
  - <<Space>ui>: 📏 Toggle Indent Guides
  - <<Space>uT>: Toggle Twilight
  - <<Space>uf>: Focus undotree
- ⚠️ WARNING In mode `n`, <<Space>f> overlaps with <<Space>flt>, <<Space>fld>, <<Space>fll>, <<Space>fli>, <<Space>flr>, <<Space>f/>, <<Space>fr>, <<Space>fq>, <<Space>fj>, <<Space>fb>, <<Space>fg>, <<Space>fgh>, <<Space>fgb>, <<Space>fgs>, <<Space>fgc>, <<Space>fgg>, <<Space>fw>, <<Space>fh>, <<Space>fc>, <<Space>fm>, <<Space>fp>, <<Space>fk>, <<Space>ff>, <<Space>fs>, <<Space>f:>, <<Space>fz>:
  - <<Space>f>: 󰈞 Find
  - <<Space>flt>: 󰜁 LSP type definitions
  - <<Space>fld>: 󰈮 LSP definitions
  - <<Space>fll>: 󰁩 Location list
  - <<Space>fli>: 󰡱 LSP implementations
  - <<Space>flr>: 󰈇 LSP references
  - <<Space>f/>: 󰋚 Search history
  - <<Space>fr>: 󰋚 Recent files
  - <<Space>fq>: 󰁨 Quickfix
  - <<Space>fj>: 󰕇 Jump list
  - <<Space>fb>: 󰓩 Find buffers
  - <<Space>fg>: 󰊢 Git
  - <<Space>fgh>: 󰓦 Git stash
  - <<Space>fgb>: 󰘬 Git branches
  - <<Space>fgs>: 󰊢 Git status
  - <<Space>fgc>: 󰜘 Git commits
  - <<Space>fgg>: 󰊢 Git files
  - <<Space>fw>: 󰱽 Grep word under cursor
  - <<Space>fh>: 󰋖 Help tags
  - <<Space>fc>: 󰏘 Colorschemes
  - <<Space>fm>: 󰃀 Marks
  - <<Space>fp>: Projects
  - <<Space>fk>: 󰌌 Keymaps
  - <<Space>ff>: 󰈞 Find files
  - <<Space>fs>: 󰱽 Grep string
  - <<Space>f:>: 󰘳 Command history
  - <<Space>fz>: 󰱼 Fuzzy find in buffer
- ⚠️ WARNING In mode `n`, <<Space>n> overlaps with <<Space>n]>, <<Space>nF>, <<Space>nf>, <<Space>nt>, <<Space>nc>, <<Space>n[>, <<Space>ng>, <<Space>nh>:
  - <<Space>n>: 󱞁 Neorg
  - <<Space>n]>: Next Placeholder
  - <<Space>nF>: Generate File Docs
  - <<Space>nf>: Generate Function Docs
  - <<Space>nt>: Generate Type Docs
  - <<Space>nc>: Generate Class Docs
  - <<Space>n[>: Previous Placeholder
  - <<Space>ng>: Generate Docs (Auto)
  - <<Space>nh>: Notification History
- ⚠️ WARNING In mode `n`, <<Space>h> overlaps with <<Space>hD>, <<Space>hs>, <<Space>hh>, <<Space>hR>, <<Space>hS>, <<Space>hv>, <<Space>hd>, <<Space>hb>, <<Space>ha>, <<Space>hc>, <<Space>hp>, <<Space>h5>, <<Space>h4>, <<Space>h3>, <<Space>h2>, <<Space>ht>, <<Space>hu>, <<Space>h1>, <<Space>hr>:
  - <<Space>h>: 󰛕 Harpoon
  - <<Space>hD>: Diff This ~
  - <<Space>hs>: Stage Hunk
  - <<Space>hh>: Harpoon Toggle Menu
  - <<Space>hR>: Reset Buffer
  - <<Space>hS>: Stage Buffer
  - <<Space>hv>: Harpoon Open in Vertical Split
  - <<Space>hd>: Diff This
  - <<Space>hb>: Blame Line
  - <<Space>ha>: Harpoon Add File
  - <<Space>hc>: Harpoon Clear List
  - <<Space>hp>: Preview Hunk
  - <<Space>h5>: Harpoon File 5
  - <<Space>h4>: Harpoon File 4
  - <<Space>h3>: Harpoon File 3
  - <<Space>h2>: Harpoon File 2
  - <<Space>ht>: Harpoon Open in New Tab
  - <<Space>hu>: Undo Stage Hunk
  - <<Space>h1>: Harpoon File 1
  - <<Space>hr>: Reset Hunk
- ⚠️ WARNING In mode `n`, <<Space>d> overlaps with <<Space>dt>, <<Space>dd>, <<Space>db>, <<Space>de>, <<Space>dB>, <<Space>dr>:
  - <<Space>d>: 󰃤 Debug
  - <<Space>dt>: Toggle Inline Diagnostics
  - <<Space>dd>: Disable Inline Diagnostics
  - <<Space>db>: DAP Toggle Breakpoint
  - <<Space>de>: Enable Inline Diagnostics
  - <<Space>dB>: DAP Set Conditional Breakpoint
  - <<Space>dr>: DAP Open REPL
- ⚠️ WARNING In mode `n`, <<Space>w> overlaps with <<Space>ww>, <<Space>wd>:
  - <<Space>w>: 󰖲 Window
  - <<Space>ww>: New Window
  - <<Space>wd>: Dismiss All Windows
- ⚠️ WARNING In mode `n`, <<Space>z> overlaps with <<Space>zp>, <<Space>zR>, <<Space>zM>, <<Space>zP>:
  - <<Space>z>: 󰘖 Fold
  - <<Space>zp>: UFO: Peek folded lines
  - <<Space>zR>: UFO: Open all folds
  - <<Space>zM>: UFO: Close all folds
  - <<Space>zP>: UFO: Peek or hover
- ⚠️ WARNING In mode `n`, <<Space>x> overlaps with <<Space>xq>, <<Space>xd>, <<Space>xw>, <<Space>xx>, <<Space>xl>, <<Space>xr>:
  - <<Space>x>: 󰒡 Trouble
  - <<Space>xq>: Quickfix List
  - <<Space>xd>: Document Diagnostics
  - <<Space>xw>: Workspace Diagnostics
  - <<Space>xx>: Toggle Trouble
  - <<Space>xl>: Location List
  - <<Space>xr>: LSP References
- ⚠️ WARNING In mode `n`, <<Space>gs> overlaps with <<Space>gsp>, <<Space>gsl>, <<Space>gss>:
  - <<Space>gs>: 󰓦 Stash
  - <<Space>gsp>: Git stash pop
  - <<Space>gsl>: Git stash list
  - <<Space>gss>: Git stash
- ⚠️ WARNING In mode `n`, <<Space>gc> overlaps with <<Space>gcb>, <<Space>gco>:
  - <<Space>gc>: 󰜘 Commit
  - <<Space>gcb>: Git checkout new branch
  - <<Space>gco>: Git checkout
- ⚠️ WARNING In mode `n`, <<Space>chf> overlaps with <<Space>chfd>:
  - <<Space>chf>: Fix
  - <<Space>chfd>: Fix Diagnostic
- ⚠️ WARNING In mode `x`, <i> overlaps with <ih>, <in>, <il>, <ii>:
  - <i>: Inside textobject
  - <ih>: GitSigns Select Hunk
  - <in>: Inside next textobject
  - <il>: Inside last textobject
  - <ii>: inner scope
- ⚠️ WARNING In mode `x`, <s> overlaps with <sa>:
  - <s>: 󰉁 Flash
  - <sa>: Add surrounding to selection
- ⚠️ WARNING In mode `x`, <a> overlaps with <an>, <al>, <ai>:
  - <a>: Around textobject
  - <an>: Next textobject
  - <al>: Last textobject
  - <ai>: full scope
- ⚠️ WARNING In mode `o`, <i> overlaps with <ih>, <in>, <il>, <ii>:
  - <i>: Inside textobject
  - <ih>: GitSigns Select Hunk
  - <in>: Inside next textobject
  - <il>: Inside last textobject
  - <ii>: inner scope
- ⚠️ WARNING In mode `o`, <a> overlaps with <an>, <al>, <ai>:
  - <a>: Around textobject
  - <an>: Next textobject
  - <al>: Last textobject
  - <ai>: full scope
- ⚠️ WARNING In mode `n`, <gr> overlaps with <grt>, <grn>, <gra>, <gri>, <grr>:
  - <gr>: References
  - <grt>: vim.lsp.buf.type_definition()
  - <grn>: vim.lsp.buf.rename()
  - <gra>: vim.lsp.buf.code_action()
  - <gri>: vim.lsp.buf.implementation()
  - <grr>: vim.lsp.buf.references()
- ⚠️ WARNING In mode `n`, <gc> overlaps with <gcO>, <gco>, <gcA>, <gcc>:
  - <gc>: Comment toggle linewise
  - <gcO>: Comment insert above
  - <gco>: Comment insert below
  - <gcA>: Comment insert end of line
  - <gcc>: Comment toggle current line
- ⚠️ WARNING In mode `n`, <gb> overlaps with <gbc>:
  - <gb>: Comment toggle blockwise
  - <gbc>: Comment toggle current block
- ⚠️ WARNING In mode `n`, <sr> overlaps with <srl>, <srn>:
  - <sr>: Replace surrounding
  - <srl>: Replace previous surrounding
  - <srn>: Replace next surrounding
- ⚠️ WARNING In mode `n`, <sd> overlaps with <sdl>, <sdn>:
  - <sd>: Delete surrounding
  - <sdl>: Delete previous surrounding
  - <sdn>: Delete next surrounding
- ⚠️ WARNING In mode `n`, <sh> overlaps with <shl>, <shn>:
  - <sh>: Highlight surrounding
  - <shl>: Highlight previous surrounding
  - <shn>: Highlight next surrounding
- ⚠️ WARNING In mode `n`, <sF> overlaps with <sFl>, <sFn>:
  - <sF>: Find left surrounding
  - <sFl>: Find previous left surrounding
  - <sFn>: Find next left surrounding
- ⚠️ WARNING In mode `n`, <sf> overlaps with <sfl>, <sfn>:
  - <sf>: Find right surrounding
  - <sfl>: Find previous right surrounding
  - <sfn>: Find next right surrounding
- ⚠️ WARNING In mode `n`, <<Space>fg> overlaps with <<Space>fgh>, <<Space>fgb>, <<Space>fgs>, <<Space>fgc>, <<Space>fgg>:
  - <<Space>fg>: 󰊢 Git
  - <<Space>fgh>: 󰓦 Git stash
  - <<Space>fgb>: 󰘬 Git branches
  - <<Space>fgs>: 󰊢 Git status
  - <<Space>fgc>: 󰜘 Git commits
  - <<Space>fgg>: 󰊢 Git files
- ✅ OK Overlapping keymaps are only reported for informational purposes.
  This doesn't necessarily mean there is a problem with your config.

Checking for duplicate mappings ~
- ⚠️ WARNING Duplicates for <<leader>aa> in mode `n`:
  * Avante: `{ rhs = "<cmd>Avante<cr>", silent = true }`
  * Ask Avante: `{}`
- ⚠️ WARNING Duplicates for <<leader>e> in mode `n`:
  * 󰙅 Open file explorer: `{ rhs = "<cmd>lua require('oil').open_float()<cr>", silent = true }`
  * 󰙅 Explorer: `{ group = true, icon = "󰙅" }`
  * 📁 Oil Float: `{}`
- ⚠️ WARNING Duplicates for <<leader>E> in mode `n`:
  * 󰙅 Open file explorer (buffer): `{ rhs = "<cmd>lua require('oil').open()<cr>", silent = true }`
  * 📁 Oil Current Dir: `{}`
- ⚠️ WARNING Duplicates for <s> in mode `n`:
  * 󰉁 Flash: `{ rhs = "<cmd>lua require('flash').jump()<cr>", silent = true }`
  * ⚡ Flash: `{}`
- ⚠️ WARNING Duplicates for <S> in mode `n`:
  * 󰉁 Flash Treesitter: `{ rhs = "<cmd>lua require('flash').treesitter()<cr>", silent = true }`
  * ⚡ Flash Treesitter: `{}`
- ⚠️ WARNING Duplicates for <<leader>sw> in mode `n`:
  * 󰛔 Search current word: `{ rhs = "<cmd>lua require('spectre').open_visual({select_word=true})<cr>", silent = true }`
  * Search Word: `{}`
- ⚠️ WARNING Duplicates for <<leader>sp> in mode `n`:
  * Search in File: `{}`
  * 󰛔 Search on current file: `{ rhs = "<cmd>lua require('spectre').open_file_search({select_word=true})<cr>", silent = true }`
- ⚠️ WARNING Duplicates for <<leader>ui> in mode `n`:
  * 📏 Toggle Indent Guides: `{}`
  * 󰉶 Toggle indent guides: `{ rhs = "<cmd>IBLToggle<cr>", silent = true }`
- ⚠️ WARNING Duplicates for <<leader>sw> in mode `v`:
  * 󰛔 Search current word: `{ rhs = "<cmd>lua require('spectre').open_visual()<cr>", silent = true }`
  * Search Word: `{}`
- ⚠️ WARNING Duplicates for <<leader>s> in mode `n`:
  * 󰆍 Search: `{ group = true, icon = "󰆍" }`
  * 🔍 Search: `{ group = true }`
- ⚠️ WARNING Duplicates for <<leader>cp> in mode `n`:
  * 🤖 Copilot: `{ group = true, icon = "🤖" }`
  * Copilot: `{ group = true }`
- ✅ OK Duplicate mappings are only reported for informational purposes.
  This doesn't necessarily mean there is a problem with your config.

