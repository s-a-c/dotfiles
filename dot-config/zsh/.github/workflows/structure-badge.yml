# Compliant with /Users/s-a-c/dotfiles/dot-config/ai/guidelines.md v<checksum>
name: Structure Badge Generation
on:
  push:
    branches: [main, master]
    paths:
      - '.zshrc.d.REDESIGN/**'
      - '.zshrc.pre-plugins.d.REDESIGN/**'
      - 'tools/generate-structure-audit.zsh'
  pull_request:
    branches: [main, master]
    paths:
      - '.zshrc.d.REDESIGN/**'
      - '.zshrc.pre-plugins.d.REDESIGN/**'
      - 'tools/generate-structure-audit.zsh'
  workflow_dispatch:

jobs:
  structure-audit:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./zsh

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Zsh
        run: |
          sudo apt-get update
          sudo apt-get install -y zsh jq

      - name: Verify structure audit tool
        run: |
          if [[ ! -f "tools/generate-structure-audit.zsh" ]]; then
            echo "Structure audit tool not found"
            exit 1
          fi
          chmod +x tools/generate-structure-audit.zsh

      - name: Run structure audit
        id: run_audit
        run: |
          ./tools/generate-structure-audit.zsh
          root="docs/redesign"
          if [[ -f "docs/redesignv2/artifacts/metrics/structure-audit.json" ]]; then
            root="docs/redesignv2/artifacts"
          fi
          echo "root=$root" >> "$GITHUB_OUTPUT"
          # Validate expected outputs in selected root
            if [[ ! -f "$root/metrics/structure-audit.json" ]]; then
            echo "Structure audit JSON not generated (root=$root)"
            exit 1
          fi
          if [[ ! -f "$root/badges/structure.json" ]]; then
            echo "Structure badge JSON not generated (root=$root)"
            exit 1
          fi
          # Soft bridge to legacy path if using redesignv2
          if [[ "$root" == "docs/redesignv2/artifacts" ]]; then
            mkdir -p docs/redesign/metrics docs/redesign/badges
            rsync -a --delete docs/redesignv2/artifacts/metrics/ docs/redesign/metrics/ || true
            rsync -a --delete docs/redesignv2/artifacts/badges/ docs/redesign/badges/
          fi

      - name: Validate structure audit output
        run: |
          root="${{ steps.run_audit.outputs.root }}"
          jq empty "$root/metrics/structure-audit.json"
          jq empty "$root/badges/structure.json"
          total_modules=$(jq -r '.total' "$root/metrics/structure-audit.json")
          violations=$(jq '.violations | length' "$root/metrics/structure-audit.json")
          order_issue=$(jq -r '.order_issue' "$root/metrics/structure-audit.json")
          echo "Structure Audit Results:"
          echo "  Total modules: $total_modules"
          echo "  Violations: $violations"
          echo "  Order issues: $order_issue"
          if [[ $violations -gt 0 || $order_issue != "false" ]]; then
            echo "❌ Structure validation failed"
            jq -r '.violations[]' "$root/metrics/structure-audit.json" 2>/dev/null || true
            exit 1
          fi
          echo "✅ Structure validation passed"

      - name: Commit badge updates (main branch only)
        if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          if [[ -n "$(git status --porcelain docs/redesignv2/artifacts/badges/ docs/redesignv2/artifacts/metrics/ 2>/dev/null)" ]]; then
            git add docs/redesignv2/artifacts/badges/structure.json 2>/dev/null || true
            git add docs/redesignv2/artifacts/metrics/structure-audit.json 2>/dev/null || true
            git add docs/redesignv2/artifacts/metrics/structure-audit.md 2>/dev/null || true
          fi
          if [[ -n "$(git status --porcelain docs/redesign/badges/ docs/redesign/metrics/ 2>/dev/null)" ]]; then
            git add docs/redesign/badges/structure.json 2>/dev/null || true
            git add docs/redesign/metrics/structure-audit.json 2>/dev/null || true
            git add docs/redesign/metrics/structure-audit.md 2>/dev/null || true
          fi
          git commit -m "chore(badges): update structure badge [automated]" || true
          git push || true

      - name: Upload structure audit artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: structure-audit-${{ github.sha }}
          path: |
            zsh/docs/redesignv2/artifacts/metrics/structure-audit.json
            zsh/docs/redesignv2/artifacts/badges/structure.json
            zsh/docs/redesignv2/artifacts/metrics/structure-audit.md
            zsh/docs/redesign/metrics/structure-audit.json
            zsh/docs/redesign/badges/structure.json
            zsh/docs/redesign/metrics/structure-audit.md
          retention-days: 30

      - name: Comment PR with structure status
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let root = 'zsh/docs/redesign';
            if (fs.existsSync('zsh/docs/redesignv2/artifacts/metrics/structure-audit.json')) {
              root = 'zsh/docs/redesignv2/artifacts';
            }
            const auditPath = `${root}/metrics/structure-audit.json`;
            if (fs.existsSync(auditPath)) {
              const audit = JSON.parse(fs.readFileSync(auditPath, 'utf8'));
              const statusIcon = audit.violations.length === 0 && !audit.order_issue ? '✅' : '❌';
              const statusText = audit.violations.length === 0 && !audit.order_issue ? 'PASS' : 'FAIL';
              let comment = `## ${statusIcon} Structure Audit Results\n\n`;
              comment += `**Status:** ${statusText}\n`;
              comment += `**Total Modules:** ${audit.total}\n`;
              comment += `**Violations:** ${audit.violations.length}\n`;
              comment += `**Order Issues:** ${audit.order_issue ? 'Yes' : 'No'}\n`;
              if (audit.violations.length > 0) {
                comment += '\n### Violations Found:\n';
                audit.violations.forEach(v => { comment += `- ${v}\n`; });
              }
              if (audit.order_issue) {
                comment += '\n### Order Issues:\nModule ordering violations detected.\n';
              }
              comment += '\n_(Source prefers redesignv2; legacy bridged during migration)_';
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }

  deploy-badges:
    needs: structure-audit
    runs-on: ubuntu-latest
    if: false
    steps:
      - name: Placeholder for gh-pages deployment
        run: |
          echo "Deployment disabled (migration phase)."
