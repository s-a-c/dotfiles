#!/usr/bin/env bash
#
# Helper script to control iTunes
#
# Copyright 2016-2025, Joe Block <jpb@unixorn.net>
#
# License: Apache 2.0

usage() {
  name=$(basename "$0")
  echo "${name} allows you to control iTunes from the command line."
  echo
  echo "  ${name} pause"
  echo "  ${name} play"
  echo "  ${name} mute"
  echo "  ${name} unmute"
  echo "  ${name} prev"
  echo "  ${name} next"
  echo "  ${name} play"
}

if [[ "$(uname -s)" != 'Darwin' ]]; then
  echo 'Sorry, this script only works on macOS'
  exit 1
fi

if [[ $# != 1 ]]; then
 usage
 exit
fi

function echo-stderr() {
  printf '%s\n' "$1" >&2  ## Send message to stderr. Exclude >&2 if you don't want it that way.
}

function fail() {
  echo-stderr "$1"
  exit "${2-1}"  ## Return a code specified by $2 or 1 by default.
}

function check-dependency() {
  if ! (builtin command -V "$1" >/dev/null 2>&1); then
    fail "Missing dependency: can't find $1 in your PATH"
  fi
}

function only-run-on() {
  # shellcheck disable=SC2086
  if [[ "$(uname -s | tr '[:upper:]' '[:lower:]')" != "$(echo $1 | tr '[:upper:]' '[:lower:]')" ]]; then
    fail "This script only runs on $1, this machine is running $(uname -s)"
  else
    debug "OS ($(uname -s)) is valid..."
  fi
}

only-run-on darwin
check-dependency osascript

case $1 in
  mute)
    exec osascript -e 'tell application "iTunes" to set mute to true'
    ;;
  unmute)
    exec osascript -e 'tell application "iTunes" to set mute to false'
    ;;
  pause)
    exec osascript -e 'tell application "iTunes" to pause'
    ;;
  play)
    exec osascript -e 'tell application "iTunes" to play'
    ;;
  next)
    exec osascript -e 'tell application "iTunes" to next track'
    ;;
  prev)
    exec osascript -e 'tell application "iTunes" to previous track'
    ;;
  *)
    echo "$1 is not a valid subcommand"
    usage
    exit 1
    ;;
esac
