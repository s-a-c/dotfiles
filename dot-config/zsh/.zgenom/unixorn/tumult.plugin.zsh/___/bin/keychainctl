#!/usr/bin/env bash
#
# Original source: https://gist.github.com/AriaFallah/fe7b651ba2652bd301334e011749e4b2/

KEYCHAIN=${KEYCHAIN:-"secrets.keychain"}

function echo-stderr() {
  printf '%s\n' "$1" >&2  ## Send message to stderr. Exclude >&2 if you don't want it that way.
}

function fail() {
  echo-stderr "$1"
  exit "${2-1}"  ## Return a code specified by $2 or 1 by default.
}

function check-dependency() {
  if ! (builtin command -V "$1" >/dev/null 2>&1); then
    fail "Missing dependency: can't find $1 in your PATH"
  fi
}

function only-run-on() {
  # shellcheck disable=SC2086
  if [[ "$(uname -s | tr '[:upper:]' '[:lower:]')" != "$(echo $1 | tr '[:upper:]' '[:lower:]')" ]]; then
    fail "This script only runs on $1, this machine is running $(uname -s)"
  else
    debug "OS ($(uname -s)) is valid..."
  fi
}

only-run-on darwin
check-dependency security

main () {
  if [[ -z "$1" ]]; then
    print_usage
  fi

  case "$1" in
    ls) list_secrets ;;
    get) get_secret "$2" ;;
    set) set_secret "$2" "$3" ;;
    rm) delete_secret "$2" ;;
    *) print_usage ;;
  esac
}

list_secrets() {
  security dump-keychain "$KEYCHAIN" | grep 0x00000007 | awk -F= '{print $2}' | tr -d \"
}

get_secret() {
  if [[ -z "$1" ]]; then
    print_usage
  fi
  security find-generic-password -a "$USER" -s "$1" -w "$KEYCHAIN"
}

set_secret() {
  if [[ -z "$1" ]] || [[ -z "$2" ]]; then
    print_usage
  fi
  security add-generic-password -D secret -U -a "$USER" -s "$1" -w "$2" "$KEYCHAIN"
}

delete_secret() {
  if [[ -z "$1" ]]; then
    print_usage
  fi
  security delete-generic-password -a "$USER" -s "$1" "$KEYCHAIN"
}

print_usage() {
  NAME=$(basename "$0")
  cat << EOF
Usage:
  $NAME set <name> <value>
  $NAME get <name>
  $NAME rm <name>
  $NAME ls
EOF
  exit 0
}

# shellcheck disable=SC2068
main $@
