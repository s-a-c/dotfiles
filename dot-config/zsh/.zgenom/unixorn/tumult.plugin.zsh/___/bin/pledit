#!/usr/bin/env bash
#
# Convert a binary plist into XML, run $EDITOR on it, then convert it back
#
# Copyright 2017, Joe Block <jpb@unixorn.net>

set -o pipefail

function echo-stderr() {
  echo "$@" 1>&2  ## Send message to stderr.
}

function fail() {
  printf '%s\n' "$1" >&2  ## Send message to stderr. Exclude >&2 if you don't want it that way.
  exit "${2-1}"  ## Return a code specified by $2 or 1 by default.
}

function check-dependencies() {
  debug "Checking dependencies..."
  # shellcheck disable=SC2041
  # Placeholders for whatever programs you really need
  for dep in "$@"
  do
    if ! has "$dep"; then
      fail "Can't find $dep in your $PATH"
    else
      debug "- Found $dep"
    fi
  done
}

function only-run-on() {
# shellcheck disable=SC2086
  if [[ "$(uname -s | tr '[:upper:]' '[:lower:]')" != "$(echo $1 | tr '[:upper:]' '[:lower:]')" ]]; then
    fail "This script only runs on $1, this machine is running $(uname -s)"
  else
    debug "OS ($(uname -s)) is valid..."
  fi
}

only-run-on darwin
check-dependencies plutil

if [[ $# -ne 1 ]]; then
  echo -e "pledit: Edit Apple plist file\nusage: pledit plist_filename"
else
  if [[ ! -w "${1}" ]]; then
    prefix='sudo'
  else
    prefix=''
  fi
  "${prefix}" plutil -convert xml1 "${1}"; # convert the binary file to xml
  "${prefix}" "${EDITOR}" "${1}"; # use the default editor
  "${prefix}" plutil -convert binary1 "${1}" # convert it back to binary
fi
