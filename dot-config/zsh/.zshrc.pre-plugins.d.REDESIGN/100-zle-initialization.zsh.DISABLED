#!/usr/bin/env zsh
# 100-ZLE-INITIALIZATION.ZSH (inlined from legacy 20-zle-initialization.zsh)
# Compliant with [/Users/s-a-c/dotfiles/dot-config/ai/guidelines.md](/Users/s-a-c/dotfiles/dot-config/ai/guidelines.md) v${GUIDELINES_CHECKSUM:-pending}
if [[ -n "${_LOADED_ZLE_INIT_REDESIGN:-}" ]]; then return 0; fi
export _LOADED_ZLE_INIT_REDESIGN=1
_zle_debug() { [[ -n "${ZSH_DEBUG:-}" ]] && echo "[ZLE-INIT] $1" >&2 || true; }
_zle_debug "Early ZLE initialization starting..."
if [[ ! -o interactive ]]; then _zle_debug "Non-interactive shell - skipping ZLE initialization"; return 0; fi
_zle_debug "Interactive shell detected - initializing ZLE system"
zmodload -F zsh/zle 2>/dev/null || zmodload zsh/zle 2>/dev/null || true
zmodload -F zsh/complist 2>/dev/null || true
autoload -Uz zle
bindkey -e
zle -la > /dev/null 2>&1 || true
autoload -Uz edit-command-line up-line-or-beginning-search down-line-or-beginning-search 2>/dev/null || true
# Preload functions that Oh-My-Zsh will try to register as ZLE widgets
autoload -Uz url-quote-magic bracketed-paste-magic 2>/dev/null || true
zle -N edit-command-line 2>/dev/null || true
zle -N up-line-or-beginning-search 2>/dev/null || true
zle -N down-line-or-beginning-search 2>/dev/null || true
zmodload -F zsh/complist 2>/dev/null || true
zmodload -F zsh/parameter 2>/dev/null || true
zmodload -F zsh/mapfile 2>/dev/null || true
local -a essential_functions=( _describe _message _wanted _requested _tags _alternative _arguments _values _sequence _sep_parts _multi_parts _path_files _files _directories _complete _approximate _correct _expand _match _prefix _ignored _list _menu _oldlist _complete_help _complete_debug _complete_tag _next_label _all_labels _setup _main_complete _normal ) func
for func in "${essential_functions[@]}"; do autoload -Uz "$func" 2>/dev/null || eval "${func}(){ return 1 }" 2>/dev/null || true; done
_zle_debug "Essential completion functions loaded"
_early_zle_test_widget(){ true; }
zle -N _early_zle_test_widget 2>/dev/null || true; zle -D _early_zle_test_widget 2>/dev/null || true; unfunction _early_zle_test_widget 2>/dev/null || true
if [[ -n "${widgets+x}" && ${#widgets[@]} -gt 0 ]]; then
	_zle_debug "✅ ZLE widgets array available with ${#widgets[@]} widgets"
	local core_widgets=(self-insert backward-delete-char accept-line) missing_widgets=() widget
	for widget in "${core_widgets[@]}"; do [[ -z "${widgets[$widget]:-}" ]] && missing_widgets+=("$widget"); done
	if [[ ${#missing_widgets[@]} -eq 0 ]]; then _zle_debug "✅ Core ZLE widgets verified"; export ZLE_EARLY_INIT_SUCCESS=1; else _zle_debug "⚠️  Missing core widgets: ${missing_widgets[*]}"; export ZLE_EARLY_INIT_SUCCESS=0; fi
else
	_zle_debug "❌ ZLE widgets array not available - initialization may have failed"; export ZLE_EARLY_INIT_SUCCESS=0
fi
setopt ZLE NO_BEEP AUTO_LIST AUTO_MENU COMPLETE_IN_WORD 2>/dev/null || true
_zle_debug "ZLE options configured"
command -v zle >/dev/null 2>&1 || { _zle_debug "❌ zle command not available"; export ZLE_EARLY_INIT_SUCCESS=0; }
bindkey -l >/dev/null 2>/dev/null || { _zle_debug "❌ bindkey not working properly"; export ZLE_EARLY_INIT_SUCCESS=0; }
export ZLE_INIT_VERSION="1.0.0" ZLE_INIT_LOADED_AT="$(date '+%Y-%m-%d %H:%M:%S' 2>/dev/null || echo 'startup')"
if [[ "$ZLE_EARLY_INIT_SUCCESS" == 1 ]]; then _zle_debug "✅ Early ZLE initialization completed successfully"; else _zle_debug "⚠️  ZLE initialization completed with warnings"; fi
if [[ "${ZSH_DEFINE_PLACEHOLDER_WIDGETS:-1}" == 1 ]]; then
	_zqs__define_widget() { local name="$1" body="$2"; [[ -z "${widgets[$name]:-}" ]] && { eval "_zqs__tmp_widget(){ ${body}; }"; zle -N -- "$name" _zqs__tmp_widget 2>/dev/null || true; unfunction _zqs__tmp_widget 2>/dev/null || true; }; }
	_zqs__define_widget fzf-cd-widget 'builtin zle push-input >/dev/null 2>&1 || true'
	_zqs__define_widget fzf-completion 'builtin zle expand-or-complete >/dev/null 2>&1 || true'
	_zqs__define_widget fzf-file-widget 'builtin zle push-input >/dev/null 2>&1 || true'
	_zqs__define_widget fzf-history-widget ':'
	_zqs__define_widget abbr-expand-and-insert ':'
	_zqs__define_widget history-substring-search-up 'builtin zle up-line-or-beginning-search >/dev/null 2>&1 || true'
	_zqs__define_widget history-substring-search-down 'builtin zle down-line-or-beginning-search >/dev/null 2>&1 || true'
	export ZSH_FSH_REBIND_LATER=1
fi
export ZGEN_AUTOLOAD_COMPINIT=0 ZLE_COMPINIT_DEFERRED=1
# ZLE wrapper removed - was hiding widget registration errors
# export ZLE_WIDGET_LOADING_PHASE=1
unset -f _zle_debug
return 0
